import numpy as np

global m, z, k, n, t
# m = np.array([1, 1, 1, 1])  # 1001001010101010101101010111 - 4 и 32 бита
z = np.array([[0], [0], [0], [1], [0], [0], [0]])  # в будущем рандом
k = 4
n = 7
t = 1

G_revers = np.array([[1, 0, 0, 0],
                     [0, 1, 0, 0],
                     [0, 0, 1, 0],
                     [0, 0, 0, 1],
                     [1, 1, 0, 1],
                     [1, 0, 1, 1],
                     [0, 1, 1, 1]])  # not correct

global G
G = np.array([[1, 0, 0, 0, 1, 1, 0],
              [0, 1, 0, 0, 1, 0, 1],  # здесь ощибка! 0 1 0 0 1 0 0 в последней единице
              [0, 0, 1, 0, 0, 1, 1],
              [0, 0, 0, 1, 1, 1, 1]])  # correct


def random_non_degenerate_matrix_func():  # S
    S = np.array([[1, 1, 0, 1],
                  [1, 0, 0, 1],
                  [0, 1, 1, 1],
                  [1, 1, 0, 0]])
    return S


def random_transposition_matrix_func():  # P
    P = np.array([[0, 1, 0, 0, 0, 0, 0],
                  [0, 0, 0, 1, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 1],
                  [1, 0, 0, 0, 0, 0, 0],
                  [0, 0, 1, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 1, 0],
                  [0, 0, 0, 0, 1, 0, 0]])
    return P
